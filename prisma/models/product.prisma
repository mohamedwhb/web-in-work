model Product {
  id          String            @id @default(uuid())
  name        String
  description String?
  price       Decimal           @default(0) @db.Decimal(10, 2)
  unit        String?
  barcode     String?           @unique
  stock       Int?              @default(0)
  minStock    Int?              @default(0)
  taxRate     Int?              @default(0)
  groupId     String?
  artNr       String?
  categoryId  String
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  updates     InventoryUpdate[]
  category    Category          @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  group       Group?            @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@index([name], map: "idx_product_name")
}

model Group {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model Category {
  id          String     @id @default(cuid())
  name        String
  color       String
  description String?
  order       Int?
  parentId    String?    @map("parent_id")
  parent      Category?  @relation("CategoryChildren", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryChildren")
  products    Product[]

  @@index([parentId])
}

model InventoryUpdate {
  id        String   @id @default(uuid())
  productId String   @map("product_id")
  quantity  Int
  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}
